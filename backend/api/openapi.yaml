openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Backend
  license:
    name: MIT
servers:
  - url: http://example.com/v1
paths:
  /storage/files/{key}:
    get:
      operationId: getFileUrl
      parameters:
        - in: path
          name: key
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DownloadInfo"
        '400':
          $ref: "#/components/responses/ClientError"
        '500':
          $ref: "#/components/responses/ServerError"
  /storage/files/{key}/thumbnails:
    get:
      operationId: getFileThumbnailUrls
      parameters:
        - in: path
          name: key
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileThumbnails"
        '400':
          $ref: "#/components/responses/ClientError"
        '500':
          $ref: "#/components/responses/ServerError"
  /transactions/storing_file:
    post:
      operationId: createTransaction
      responses:
        '201':
          description: created transaction info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        '400':
          $ref: "#/components/responses/ClientError"
        '500':
          $ref: "#/components/responses/ServerError"
  /transactions/storing_file/{transaction_id}:
    patch:
      operationId: updateTransaction
      parameters:
        - in: path
          name: transaction_id
          description: target transaction
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  $ref: "#/components/schemas/TransactionStatus"
      responses:
        '200':
          description: Updated Transaction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        '400':
          $ref: "#/components/responses/ClientError"
        '500':
          $ref: "#/components/responses/ServerError"
components:
  schemas:
    FileThumbnail:
      type: object
      required:
        - url
      properties:
        url:
          type: string
    FileThumbnails:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/FileThumbnail"
    DownloadInfo:
      type: object
      required:
        - name
        - url
        - thumbnails
      properties:
        name:
          type: string
        url:
          type: string
    TransactionStatus:
      type: string
      enum: [READY, UPLOADED]
    Transaction:
      type: object
      required:
        - id
        - status
        - file_id
        - url
      properties:
        id:
          type: string
        status:
          $ref: "#/components/schemas/TransactionStatus"
        file_id:
          type: string
        url:
          type: string
    ServerErrorCode:
      type: string
      enum:
        - Unknown
    ClientErrorCode:
      type: string
      enum:
        - Unknown
        - ThumbnailNotFound
        - FileNotFound
  responses:
    ServerError:
      description: Server Error
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - message
            properties:
              code:
                $ref: "#/components/schemas/ServerErrorCode"
              message:
                type: string
    ClientError:
      description: Client Error
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - message
            properties:
              code:
                $ref: "#/components/schemas/ClientErrorCode"
              message:
                type: string
