AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Backend API to store data

Globals:
  Function:
    Timeout: 5
    MemorySize: 128

Resources:
  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,PUT,PATCH,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"

  HandleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: catch-all/
      Handler: catch-all
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref RestApi
      Policies:
        - "{{resolve:ssm:/app/tsumiki-uploader/backend/batches/policy}}"
        - "{{resolve:ssm:/app/tsumiki-uploader/platform/storages/backend/policy}}"
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - "ssm:GetParameter"
              Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/app/tsumiki-uploader/*"
  
      Environment:
        Variables:
          STORAGE_REGION: !Ref AWS::Region

  HandleFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${HandleFunction}'
      RetentionInDays: 30

  LogParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /app/tsumiki-uploader/backend/api/log
      Type: String
      Value: !Ref HandleFunctionLogGroup

  ResourceApiParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /app/tsumiki-uploader/backend/api/resources/api
      Type: String
      Value: !Ref RestApi

Outputs:
  BackendUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
