AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-tsumiki-uploader-batches
  Sample SAM Template for sam-tsumiki-uploader-batches

Globals:
  Function:
    Timeout: 60
    MemorySize: 128

Resources:
  CreateThumbnailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create-thumbnails/
      Handler: create-thumbnails
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /hello
            Method: GET
      Environment:
        Variables:
          REGION: !Ref AWS::Region
      Policies:
        - "{{resolve:ssm:/app/tsumiki-uploader/platform/storages/backend/policy}}"
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - "ssm:GetParameter"
              Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/app/tsumiki-uploader/*"

  ThumbnailsCreatingExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole

  ThumbnailsCreatingStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: ThumbnailsCreatingStateMachine
      DefinitionString: !Sub >
        {
          "StartAt": "MyState",
          "States": {
            "MyState": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "${CreateThumbnailsFunction}",
                "Payload": {
                  "Input.$": "$"
                }
              },
              "End": true
            }
          }
        }
      RoleArn: !GetAtt ThumbnailsCreatingExecutionRole.Arn

  AccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: 'Managed policy for allowing specific S3 actions'
      Path: '/'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - states:StartExecution
            Resource: !Sub "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:ThumbnailsCreatingStateMachine"

  ThumbnailsCreatingStateMachineArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /app/tsumiki-uploader/backend/batches/creating-thumbnails-state-machine
      Type: String
      Value: !Ref ThumbnailsCreatingStateMachine

  AllStateMachineArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /app/tsumiki-uploader/backend/batches
      Type: String
      Value: !Sub |
        {
          "ThumbnailsCreatingStateMachineArn": "${ThumbnailsCreatingStateMachine}"
        }

  PolicyParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /app/tsumiki-uploader/backend/batches/policy
      Type: String
      Value: !Ref AccessPolicy

  CreateThumbnailsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${CreateThumbnailsFunction}'
      RetentionInDays: 30

  CreateThumbnailsFunctionLogParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /app/tsumiki-uploader/backend/batches/logs/create-thumbnails
      Type: String
      Value: !Ref CreateThumbnailsFunctionLogGroup
