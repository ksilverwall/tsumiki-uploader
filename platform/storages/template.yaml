AWSTemplateFormatVersion: '2010-09-09'
Description: Tsunmiki Uploader Platform

Resources:
  DataStorage:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins: ["*"]
            AllowedMethods: [GET, PUT]
            AllowedHeaders: ["*"]
            MaxAge: 3000

  TransactionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
      TimeToLiveSpecification: 
        AttributeName: expiration_time
        Enabled: true
      BillingMode: PAY_PER_REQUEST

  ApplicationStorage:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  #
  # Permissions
  #

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref AWS::StackName

  ApplicationStorageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ApplicationStorage
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${ApplicationStorage}/*"
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}"

  AccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: '/'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
            Resource: !Sub "arn:aws:s3:::${DataStorage}/*"
          - Effect: Allow
            Action:
              - "dynamodb:PutItem"
              - "dynamodb:GetItem"
            Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*"
 
  BackendPlatformParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /app/tsumiki-uploader/platform/storages/backend
      Type: String
      Value: !Sub >
        {
          "DataStorage": "${DataStorage}",
          "TransactionTable": {
            "Name": "${TransactionTable}",
            "Key": "id",
            "TTL": "expiration_time"
          }
        }

  PolicyParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /app/tsumiki-uploader/platform/storages/backend/policy
      Type: String
      Value: !Ref AccessPolicy

  FrontendParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /app/tsumiki-uploader/platform/storages/frontend/domain-name
      Type: String
      Value: !GetAtt ApplicationStorage.DomainName

  FrontendOAIParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /app/tsumiki-uploader/platform/storages/frontend/oai
      Type: String
      Value: !Ref CloudFrontOriginAccessIdentity

Outputs:
  ApplicationStorage:
    Value: !Ref ApplicationStorage