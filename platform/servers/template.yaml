AWSTemplateFormatVersion: '2010-09-09'
Description: Tsunmiki Uploader Platform

Parameters:
  CertificateArn:
    Type: String

Resources:
  DataStorage:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins: ["*"]
            AllowedMethods: [GET, PUT]
            AllowedHeaders: ["*"]
            MaxAge: 3000

  ApplicationStorage:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: CloudFront Distribution
        Enabled: true
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
        Origins:
          - DomainName: !GetAtt ApplicationStorage.DomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: ''
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        PriceClass: PriceClass_All

  TransactionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
      TimeToLiveSpecification: 
        AttributeName: ExpirationTime
        Enabled: true
      BillingMode: PAY_PER_REQUEST

  AccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: '/'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
            Resource: !Sub "arn:aws:s3:::${DataStorage}/*"
          - Effect: Allow
            Action:
              - "dynamodb:PutItem"
              - "dynamodb:GetItem"
            Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*"
          - Effect: Allow
            Action:
              - "ssm:GetParameter"
            Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/app/tsumiki-uploader/backend/platform"
 
  BackendPlatformParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /app/tsumiki-uploader/backend/platform
      Type: String
      Value: !Sub >
        {
          "DataStorage": "${DataStorage}",
          "TransactionTable": {
            "Name": "${TransactionTable}",
            "Key": "id",
            "TTL": "ExpirationTime"
          }
        }

  PolicyParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /app/tsumiki-uploader/backend/platform/policy
      Type: String
      Value: !Ref AccessPolicy

Outputs:
  ApplicationStorage:
    Value: !Ref ApplicationStorage
  CloudFrontDomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName
    Description: CloudFront Distribution Domain Name
  CloudFrontDistributionId:
    Value: !Ref CloudFrontDistribution
    Description: CloudFront Distribution ID
